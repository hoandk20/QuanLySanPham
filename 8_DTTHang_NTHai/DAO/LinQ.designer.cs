#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace _8_DTTHang_NTHai.DAO
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="qlsp_8_DTTHangNTHai")]
	public partial class LinQDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertdangnhap(dangnhap instance);
    partial void Updatedangnhap(dangnhap instance);
    partial void Deletedangnhap(dangnhap instance);
    partial void Insertnhacungcap(nhacungcap instance);
    partial void Updatenhacungcap(nhacungcap instance);
    partial void Deletenhacungcap(nhacungcap instance);
    partial void Insertsanpham(sanpham instance);
    partial void Updatesanpham(sanpham instance);
    partial void Deletesanpham(sanpham instance);
    #endregion
		
		public LinQDataContext() : 
				base(global::_8_DTTHang_NTHai.Properties.Settings.Default.qlsp_8_DTTHangNTHaiConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LinQDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinQDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinQDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinQDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<dangnhap> dangnhaps
		{
			get
			{
				return this.GetTable<dangnhap>();
			}
		}
		
		public System.Data.Linq.Table<nhacungcap> nhacungcaps
		{
			get
			{
				return this.GetTable<nhacungcap>();
			}
		}
		
		public System.Data.Linq.Table<sanpham> sanphams
		{
			get
			{
				return this.GetTable<sanpham>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dangnhap")]
	public partial class dangnhap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _username;
		
		private string _password;
		
		private string _fullname;
		
		private string _email;
		
		private System.Nullable<int> _mod;
		
		private string _state;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnfullnameChanging(string value);
    partial void OnfullnameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnmodChanging(System.Nullable<int> value);
    partial void OnmodChanged();
    partial void OnstateChanging(string value);
    partial void OnstateChanged();
    #endregion
		
		public dangnhap()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(30)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fullname", DbType="NVarChar(50)")]
		public string fullname
		{
			get
			{
				return this._fullname;
			}
			set
			{
				if ((this._fullname != value))
				{
					this.OnfullnameChanging(value);
					this.SendPropertyChanging();
					this._fullname = value;
					this.SendPropertyChanged("fullname");
					this.OnfullnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mod", DbType="Int")]
		public System.Nullable<int> mod
		{
			get
			{
				return this._mod;
			}
			set
			{
				if ((this._mod != value))
				{
					this.OnmodChanging(value);
					this.SendPropertyChanging();
					this._mod = value;
					this.SendPropertyChanged("mod");
					this.OnmodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state", DbType="NChar(20)")]
		public string state
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this.OnstateChanging(value);
					this.SendPropertyChanging();
					this._state = value;
					this.SendPropertyChanged("state");
					this.OnstateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.nhacungcap")]
	public partial class nhacungcap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _manhacc;
		
		private string _tennhacc;
		
		private string _emailnhacc;
		
		private string _dienthoai;
		
		private EntitySet<sanpham> _sanphams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmanhaccChanging(int value);
    partial void OnmanhaccChanged();
    partial void OntennhaccChanging(string value);
    partial void OntennhaccChanged();
    partial void OnemailnhaccChanging(string value);
    partial void OnemailnhaccChanged();
    partial void OndienthoaiChanging(string value);
    partial void OndienthoaiChanged();
    #endregion
		
		public nhacungcap()
		{
			this._sanphams = new EntitySet<sanpham>(new Action<sanpham>(this.attach_sanphams), new Action<sanpham>(this.detach_sanphams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_manhacc", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int manhacc
		{
			get
			{
				return this._manhacc;
			}
			set
			{
				if ((this._manhacc != value))
				{
					this.OnmanhaccChanging(value);
					this.SendPropertyChanging();
					this._manhacc = value;
					this.SendPropertyChanged("manhacc");
					this.OnmanhaccChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tennhacc", DbType="NVarChar(50)")]
		public string tennhacc
		{
			get
			{
				return this._tennhacc;
			}
			set
			{
				if ((this._tennhacc != value))
				{
					this.OntennhaccChanging(value);
					this.SendPropertyChanging();
					this._tennhacc = value;
					this.SendPropertyChanged("tennhacc");
					this.OntennhaccChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emailnhacc", DbType="NVarChar(40)")]
		public string emailnhacc
		{
			get
			{
				return this._emailnhacc;
			}
			set
			{
				if ((this._emailnhacc != value))
				{
					this.OnemailnhaccChanging(value);
					this.SendPropertyChanging();
					this._emailnhacc = value;
					this.SendPropertyChanged("emailnhacc");
					this.OnemailnhaccChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dienthoai", DbType="NVarChar(30)")]
		public string dienthoai
		{
			get
			{
				return this._dienthoai;
			}
			set
			{
				if ((this._dienthoai != value))
				{
					this.OndienthoaiChanging(value);
					this.SendPropertyChanging();
					this._dienthoai = value;
					this.SendPropertyChanged("dienthoai");
					this.OndienthoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="nhacungcap_sanpham", Storage="_sanphams", ThisKey="manhacc", OtherKey="manhacc")]
		public EntitySet<sanpham> sanphams
		{
			get
			{
				return this._sanphams;
			}
			set
			{
				this._sanphams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_sanphams(sanpham entity)
		{
			this.SendPropertyChanging();
			entity.nhacungcap = this;
		}
		
		private void detach_sanphams(sanpham entity)
		{
			this.SendPropertyChanging();
			entity.nhacungcap = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.sanpham")]
	public partial class sanpham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _masp;
		
		private string _tensp;
		
		private System.Nullable<int> _soluong;
		
		private System.Nullable<double> _dongia;
		
		private System.Nullable<double> _thanhtien;
		
		private string _hangsp;
		
		private System.Nullable<int> _manhacc;
		
		private EntityRef<nhacungcap> _nhacungcap;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaspChanging(int value);
    partial void OnmaspChanged();
    partial void OntenspChanging(string value);
    partial void OntenspChanged();
    partial void OnsoluongChanging(System.Nullable<int> value);
    partial void OnsoluongChanged();
    partial void OndongiaChanging(System.Nullable<double> value);
    partial void OndongiaChanged();
    partial void OnthanhtienChanging(System.Nullable<double> value);
    partial void OnthanhtienChanged();
    partial void OnhangspChanging(string value);
    partial void OnhangspChanged();
    partial void OnmanhaccChanging(System.Nullable<int> value);
    partial void OnmanhaccChanged();
    #endregion
		
		public sanpham()
		{
			this._nhacungcap = default(EntityRef<nhacungcap>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_masp", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int masp
		{
			get
			{
				return this._masp;
			}
			set
			{
				if ((this._masp != value))
				{
					this.OnmaspChanging(value);
					this.SendPropertyChanging();
					this._masp = value;
					this.SendPropertyChanged("masp");
					this.OnmaspChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tensp", DbType="NVarChar(50)")]
		public string tensp
		{
			get
			{
				return this._tensp;
			}
			set
			{
				if ((this._tensp != value))
				{
					this.OntenspChanging(value);
					this.SendPropertyChanging();
					this._tensp = value;
					this.SendPropertyChanged("tensp");
					this.OntenspChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soluong", DbType="Int")]
		public System.Nullable<int> soluong
		{
			get
			{
				return this._soluong;
			}
			set
			{
				if ((this._soluong != value))
				{
					this.OnsoluongChanging(value);
					this.SendPropertyChanging();
					this._soluong = value;
					this.SendPropertyChanged("soluong");
					this.OnsoluongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dongia", DbType="Float")]
		public System.Nullable<double> dongia
		{
			get
			{
				return this._dongia;
			}
			set
			{
				if ((this._dongia != value))
				{
					this.OndongiaChanging(value);
					this.SendPropertyChanging();
					this._dongia = value;
					this.SendPropertyChanged("dongia");
					this.OndongiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thanhtien", DbType="Float")]
		public System.Nullable<double> thanhtien
		{
			get
			{
				return this._thanhtien;
			}
			set
			{
				if ((this._thanhtien != value))
				{
					this.OnthanhtienChanging(value);
					this.SendPropertyChanging();
					this._thanhtien = value;
					this.SendPropertyChanged("thanhtien");
					this.OnthanhtienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hangsp", DbType="NVarChar(50)")]
		public string hangsp
		{
			get
			{
				return this._hangsp;
			}
			set
			{
				if ((this._hangsp != value))
				{
					this.OnhangspChanging(value);
					this.SendPropertyChanging();
					this._hangsp = value;
					this.SendPropertyChanged("hangsp");
					this.OnhangspChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_manhacc", DbType="Int")]
		public System.Nullable<int> manhacc
		{
			get
			{
				return this._manhacc;
			}
			set
			{
				if ((this._manhacc != value))
				{
					if (this._nhacungcap.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmanhaccChanging(value);
					this.SendPropertyChanging();
					this._manhacc = value;
					this.SendPropertyChanged("manhacc");
					this.OnmanhaccChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="nhacungcap_sanpham", Storage="_nhacungcap", ThisKey="manhacc", OtherKey="manhacc", IsForeignKey=true)]
		public nhacungcap nhacungcap
		{
			get
			{
				return this._nhacungcap.Entity;
			}
			set
			{
				nhacungcap previousValue = this._nhacungcap.Entity;
				if (((previousValue != value) 
							|| (this._nhacungcap.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._nhacungcap.Entity = null;
						previousValue.sanphams.Remove(this);
					}
					this._nhacungcap.Entity = value;
					if ((value != null))
					{
						value.sanphams.Add(this);
						this._manhacc = value.manhacc;
					}
					else
					{
						this._manhacc = default(Nullable<int>);
					}
					this.SendPropertyChanged("nhacungcap");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
